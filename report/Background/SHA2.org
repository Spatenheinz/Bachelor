%% Forkort meget af det her ved at referere til artiklen for definitioner osv?

SHA256 is a one way Secure Hash Algorithm. Which is where it gets its name from.
It is part of the SHA2 familiy and was designed and published by the NSA.
SHA256 is also build upon the Merkle-Damg√•rd construction, like MD5.

The 256 part refers to the output size of 256 bit.
SHA256 can take in input of any size (depending on the implementation) but works
on chunks of 512 bits and then outputs a digest or hash of 256 bits.
Other versions from the SHA2 familiy exsits, like SHA512 and the truncated
versions like SHA224 and SHA384. All of which are very similar.

The SHA256 routine can be expressed as some initialization and then 4 computation stages.
All of which works on the massage encoded in binary. All operations are also bitwise.

Firstly all constants and variables gets initialized. All members of the SHA familiy use some preset constants for their initial round of calculations.
SHA256 uses an array of size 64, K, consisting of the first 32 bits of the fractional parts of the cube roots of the first 64 prime numbers.
It also uses eight working variables $H_i$ with initial value of the first 32 bits of the fractional parts of the square roots of the first 8 prime numbers.
These H variabels gets updated with each round, and will contain the final hash after the final round.

Then the message gets padded. In SHA256 the message bit-length needs to be a multiple of 512.
The padding scheme consists of appending a 1 at the end of the message, and then appending 0's untill the message has a length of $x*512+448$.
Finally the length of the original message is appended as a bigendian 64 bit integer.
This also results in SHA256 not being able to handle messages that has a lenght of over $2^{64}$.

For the first stage of the computation is to expand the message
%% SHA2 works by first expanding the input and then compressing it with a one-way compression Davis-Meyers structure.
As mentioned the input block is of 512 bits, so sixteen 32 bit words. These gets extended to 64 32 bit words.
The extention of the input block works as follows:
\begin{equation}
  w[i] =
  \begin{cases}
    M[i]  &for 0 \leq i \leq 15
    \sigma_1(W) +  &for 16 \leq i \leq 63
  \end{cases}
\end{equation}
%% Bla bla bla something smart. Samt et godt diagram eller noget..?

The second stage is to update the H variables.

The third stage is to compute $ch$, $maj$, $temp_1$ and $temp_2$ for each of the 64 entries in the array K and the expanded message W.
\begin{equation}
ch &= (x \wedge y) \oplus (\neg x \wedge z)
maj &= (x \wedge y) \oplus (x \wedge z) \oplus (y \wedge z)
...
\end{equation}
See NIST-article

For the last stage the H variables gets updated one last time, so they now contain the final hash. Then they get appended together and returned.


#+CAPTION: One round of the SHA2 compression function (source https://upload.wikimedia.org/wikipedia/commons/7/7d/SHA-2.svg)
#+LABEL: fig:SHA2-round
[[SHA-2.svg]]
