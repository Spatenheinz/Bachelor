* Background

** FPGA
Why use FPGA's? To get a speed increase by moving frequently used functions and calculations from the CPU to a specialized chip (the FPGA).
This will result less time "wasted" on the CPU, and the specialized chip will ideally also be able to do the computations faster than a generic CPU.
** SME and CSP
   
** A crypto library
Cryptografic functions are used by developers of across most branches, whether it'll be communicating securely over a network, or hashing programs to do version control.
So there is a motive for having a crypto library for FPGA's. Infact such a processor has been made before. IBM created their own "IBM 4758 Secure Coprocessor"(ref. https://web.archive.org/web/20170808032012/http://www.research.ibm.com/people/s/sailer/publications/2001/ibm4758.pdf).% Another point is modern Hardware security modules (HSM) which also does this.
However the problem with the exsisting solutions is that many of them require setting up a royalty-based licensing deal, which makes it difficult to use for experimental development, small projects, and in reseach and academics.
So we set out to create an opensource crypto library.

The crypto library consists of an implementation of various cryptografic functions, such as AES and SHA256. It should also have an API allowing users to utilize these functions in their projects, as they would with any other library.
These implementations should also be optimized in terms of speed so that they are competitive with the exsisting software solutions.
%Creating a cypto library for FPGA's ...
*** Hashing
Hashing is a mathematical concept refering to using a hash function to map some data of arbitrary size to a value of a fixed size. Cryptografic hash functions is a subset of all hash functions.
The reason for this is that for a hash function to be a cryptografic hash function it needs to uphold several properties to ensure it is secure, such as ensuring that it is hard to find collisions. Computers also have limited space in memory which limits the implementaion of hash functions. Lastly and most importantly, computers can't do randomness.
If a hash function can be implemented in with a limited input space, is pseudo random, and upholds certain properties it can be categorized as a "Cryptografic Hash Function". One such example is the outdated MD5 algorithm.
*** MD5
